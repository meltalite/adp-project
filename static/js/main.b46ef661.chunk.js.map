{"version":3,"sources":["logo.svg","i18n.js","layouts/navigation/searchbar/search-bar.js","layouts/navigation/language/language.js","layouts/navigation/navigation.js","layouts/our presence/our-presence.js","layouts/sections/sections.js","layouts/masthead/masthead.js","layouts/about us/about-us.js","layouts/suppliers/suppliers.js","layouts/footer/footer.js","layouts/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","i18n","use","XHR","LanguageDetector","initReactI18next","init","fallbackLng","debug","interpolation","escapeValue","react","useSuspense","wait","backend","loadPath","process","load","SearchBar","searchNode","useRef","useEffect","node","current","keyword","queue","scrollIndex","scroll","length","div","scrollIntoView","focus","keypressListener","e","key","text","value","trim","pattern","RegExp","divs","document","getElementsByClassName","i","para","getElementsByTagName","undefined","console","log","match","paraText","innerText","paraHtml","innerHTML","exec","replacement","markedHtml","replace","push","searchKeyword","addEventListener","removeEventListener","ref","type","className","placeholder","Language","useTranslation","id","display","map","lang","onClick","changeLanguage","Navigation","useState","isOpen","setIsOpen","t","navMenus","Navbar","fixed","NavbarBrand","href","src","altText","NavbarToggler","Collapse","navbar","Nav","navItem","NavItem","Map","Sections","style","padding","borderBottom","item","items","caption","Masthead","activeIndex","setActiveIndex","animating","setAnimating","slides","CarouselItem","onExiting","onExited","alt","CarouselCaption","captionText","Carousel","next","nextIndex","previous","ride","CarouselIndicators","onClickHandler","newIndex","AboutUs","pictures","encodeURI","Suppliers","logos","Footer","icon","faInstagram","faYoutube","faFacebook","faTwitter","faLinkedin","Home","App","Loader","logo","fallback","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b46ef661.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from 'react-i18next';\nimport XHR from \"i18next-xhr-backend\";\n\ni18n\n    .use(XHR)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: \"en\",\n        debug: false,\n\n        interpolation: {\n            escapeValue: false,\n        },\n\n        react: {\n            useSuspense: true,\n            wait: true\n        },\n\n        backend: {\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        },\n        load: 'unspecific',\n    });\n\nexport default i18n;","import React, { useRef, useEffect } from 'react';\nimport './search-bar.scss'\n\nexport default function SearchBar() {\n  const searchNode = useRef()\n\n  useEffect(() => {\n    const node = searchNode.current\n    let keyword = ''\n    let queue = []\n    let scrollIndex = 0\n\n    function searchKeyword(text, queue) {\n      const pattern = new RegExp(text, 'gi');\n      queue = []\n\n      const divs = document.getElementsByClassName(\"page-section\");\n      for (var i = 0; i < divs.length; i++) {\n        const para = divs[i].getElementsByTagName(\"p\");\n        if (para === undefined || para.length === 0) continue\n        console.log(para)\n        const paraText = para[0].innerText;\n        const paraHtml = para[0].innerHTML;\n\n        var matched = []\n        let match\n        if ((match = pattern.exec(paraText)) != null) {\n          const replacement = `<span style=\"background-color:orange\">${match[0]}</span>`\n          const markedHtml = paraHtml.replace(pattern, replacement)\n          para.innerHTML = markedHtml\n        }\n        queue.push([divs[i], para[0], paraHtml, matched])\n      }\n\n      return queue\n    }\n\n    function scroll(queue, scrollIndex) {\n      if (queue.length > 0) {\n        const [div] = queue[scrollIndex]\n        div.scrollIntoView()\n        div.focus()\n        if(queue.length - 1 > scrollIndex) {\n          scrollIndex = scrollIndex + 1\n        } else {\n          scrollIndex = 0\n        }\n      }\n      return scrollIndex;\n    }\n\n    function keypressListener(e) {\n      if (e.key === 'Enter') {\n        const text = node.value.trim()\n        if (text === '') {\n          keyword = ''\n          queue = []\n          scrollIndex = 0\n        } else if (text !== keyword) {\n          keyword = text\n          queue = []\n          scrollIndex = 0\n          queue = searchKeyword(keyword, queue)\n          scrollIndex = scroll(queue, scrollIndex)\n        } else if (text === keyword) {\n          scrollIndex = scroll(queue, scrollIndex)\n        }\n      }\n    }\n\n    node.addEventListener('keypress', keypressListener)\n    return () => {\n      node.removeEventListener('keypress', keypressListener)\n    }\n  }, [])\n\n\n  return (\n    <>\n      <input\n        ref={searchNode}\n        type=\"text\"\n        className='nav-menu__search-input'\n        placeholder=\"&#128269;\"\n      />\n    </>\n  )\n}","import React from 'react';\nimport { useTranslation } from 'react-i18next'\nimport './language.scss'\n\nexport default function Language() {\n  const { i18n } = useTranslation()\n\n  const changeLanguage = (lang) => {\n    i18n.changeLanguage(lang)\n  }\n\n  const languages = [\n    {id: 'en', display:'🇬🇧'},\n    {id: 'jp', display:'🇯🇵'},\n    {id: 'ch', display:'🇨🇳'},\n  ]\n\n  return (\n      <div className='nav-menu__lang'>\n        { languages.map(lang => (\n            <button \n              key={lang.id}\n              onClick={() => changeLanguage(lang.id)} \n            >{lang.display}</button>\n          ))\n        }\n      </div>\n  )\n}","import React, { useState } from 'react';\nimport './navigation.scss'\nimport { Navbar, Nav, NavItem, NavbarBrand, NavbarToggler, Collapse } from 'reactstrap';\nimport SearchBar from './searchbar/search-bar';\nimport Language from './language/language';\nimport { useTranslation } from 'react-i18next'\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false)\n  const toggle = () => setIsOpen(!isOpen)\n  const { t } = useTranslation()\n  const navMenus = [\n    t(\"Nav.about us\"),\n    t(\"Nav.suppliers\"),\n    t(\"Nav.industries & applicants\"),\n    t(\"Nav.products\"),\n    t(\"Nav.services\"),\n    t(\"Nav.contact us\"),\n  ]\n  return (\n    <>\n      <Navbar fixed='top'>\n        <NavbarBrand href='#' ><img src={`${process.env.PUBLIC_URL}/pictures/main_adp.jpg`} altText='ADP' /></NavbarBrand>\n        <NavbarToggler className='d-block d-md-none' onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar className='nav-menu__collapse' >\n          <Nav className='main-nav' >\n            <>\n              {\n                navMenus.map(navItem => (\n                  <NavItem \n                    key={navItem}\n                    className='nav-menu text'\n                  >\n                    <a href={`#${navItem}`}>{navItem}</a>\n                  </NavItem>\n                ))\n              }\n              <NavItem className='nav-menu search-lang'>\n                <Language />\n                <SearchBar />\n              </NavItem>\n            </>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </>\n  )\n}","import React from 'react';\nimport './our-presence.scss';\n\nexport default function Map() {\n    return (\n        <div className=\"row\" >\n            <div className=\"col-0 col-md-6\" ></div>\n            <div className=\"map col-12 col-md-4\" ></div>\n        </div>\n    )\n}","import React from 'react'\nimport { useTranslation } from 'react-i18next';\n\nexport default function Sections() {\n  const { t } = useTranslation();\n  const style = {\n    padding: '70px 20px 0px 20px',\n    borderBottom: '1px dashed purple'\n  }\n  return (\n    [1].map(item => (\n      <section key={item} id={item} style={style} className='page-section'>\n        <div key={item} className=\"row\" >\n          <div key={item} className=\"col-12\" >\n            <h1>{t('Lipsum.title')}</h1>\n            <p>{t('Lipsum.content')}</p>\n          </div>\n        </div>\n      </section>\n    ))\n  )\n}","import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport './masthead.scss'\nimport { useTranslation } from 'react-i18next';\n\nconst items = [\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/carousel/c_blue.jpg`,\n    altText: 'Slide 1',\n    caption: 'Flexible'\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/carousel/c_green.jpg`,\n    altText: 'Slide 2',\n    caption: 'Innovative'\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/carousel/c_white.jpg`,\n    altText: 'Slide 3',\n    caption: 'Improvement'\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/carousel/c_yellow.jpg`,\n    altText: 'Slide 4',\n    caption: 'Comprehensive'\n  }\n];\n\nexport default function Masthead() {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n  const { t } = useTranslation()\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  const slides = items.map((item) => {\n    return (\n      <CarouselItem\n        onExiting={() => setAnimating(true)}\n        onExited={() => setAnimating(false)}\n        key={item.src}\n      >\n        <img src={item.src} alt={item.altText} />\n        <CarouselCaption captionText={t(`Masthead.${item.caption}`)}/>\n      </CarouselItem>\n    );\n  });\n\n  return (\n    <Carousel\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n      className='masthead'\n      ride='carousel'\n    >\n      <CarouselIndicators items={items} activeIndex={activeIndex} onClickHandler={goToIndex} />\n      {slides}\n    </Carousel>\n  );\n}","import React from 'react';\nimport './about-us.scss';\nimport { useTranslation } from 'react-i18next';\n\nconst items = [\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/about us/au_office.jpg`,\n    altText: 'au_office',\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/about us/au_polymer.jpg`,\n    altText: 'au_polymer',\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/about us/au_granules.jpg`,\n    altText: 'au_granules',\n  },\n]\n\nexport default function AboutUs() {\n  const { t } = useTranslation()\n\n  const pictures = items.map(item => {\n    return (\n      <img src={item.src} alt={item.altText}/>\n    )\n  })\n\n  return (\n    <section className='page-section'>\n      <div className='about-us' id={encodeURI(t('Nav.about us'))}>\n        <div className='col-12 col-md-5' >\n          <h2>\n            {t('About Us.title')}\n          </h2>\n          <p>\n            {t('About Us.p1')}\n          </p>\n          <p>\n            {t('About Us.p2')}\n          </p>\n        </div>\n        <div className='col-12 col-md-5' >\n          {pictures}\n        </div>\n      </div>\n    </section>\n  )\n}","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport './suppliers.scss'\n\nconst items = [\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/suppliers/s_celanese.png`,\n    altText: 's_celanese',\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/suppliers/s_basf.png`,\n    altText: 's_basf',\n  },\n  {\n    src: `${process.env.PUBLIC_URL}/pictures/suppliers/s_solvay.png`,\n    altText: 's_solvay',\n  },\n]\n\nexport default function Suppliers() {\n  const { t } = useTranslation()\n\n  const logos = items.map(item => {\n    return (\n      <img src={item.src} alt={item.altText} />\n    )\n  })\n\n  return (\n    <section className='page-section'>\n      <div className=\"suppliers\" id={encodeURI(t('Nav.suppliers'))}>\n        <h2>\n          {t('Suppliers.title')}\n        </h2>\n        <div className='col-12 col-md-12' >\n          {logos}\n        </div>\n      </div>\n    </section>\n  )\n}","import React from 'react';\nimport './footer.scss';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { \n  faInstagram,\n  faTwitter,\n  faFacebook,\n  faYoutube,\n  faLinkedin\n } from '@fortawesome/free-brands-svg-icons'\n\nexport default function Footer() {\n  const { t } = useTranslation()\n\n  return (\n    <footer className='footer' >\n      <div className='col-md-4 about d-none d-md-block'>\n        <h2>{t('Footer.about.title')}</h2>\n        <p>{t('Footer.about.p1')}</p>\n        <p>{t('Footer.about.p2')}</p>\n        <p>{t('Footer.about.p3')}</p>\n      </div>\n      <div className='col-md-3 contact'>\n        <h2>{t('Footer.contact.title')}</h2>\n        <p>{t('Footer.contact.name')}</p>\n        <p>{t('Footer.contact.office')}</p>\n        <p>{t('Footer.contact.street')}</p>\n        <p>{t('Footer.contact.district')}</p>\n        <p>{t('Footer.contact.phone')}</p>\n        <p>{t('Footer.contact.fax')}</p>\n      </div>\n      <div className='col-md-3 follow'>\n        <h2>{t('Footer.follow.title')}</h2>\n        <div className='socmed'>\n          <a href='#'><FontAwesomeIcon icon={faInstagram} /></a>\n          <a href='#'><FontAwesomeIcon icon={faYoutube} /></a>\n          <a href ='#'><FontAwesomeIcon icon={faFacebook} /></a>\n          <a href ='#'><FontAwesomeIcon icon={faTwitter} /></a>\n          <a href ='#'><FontAwesomeIcon icon={faLinkedin} /></a>\n        </div>\n      </div>\n      <div className='col-md-2 logo'>\n      </div>\n    </footer>\n  )\n}","import React from 'react';\nimport './home.scss'\nimport Navigation from \"./navigation/navigation\";\nimport Map from './our presence/our-presence';\nimport Sections from './sections/sections';\nimport Masthead from './masthead/masthead';\nimport AboutUs from './about us/about-us';\nimport Suppliers from './suppliers/suppliers';\nimport Footer from './footer/footer';\n\nexport default function Home() {\n    return (\n        <>\n            <Navigation />\n            <Masthead />\n            <AboutUs />\n            <Suppliers />\n            <Sections />\n            <Map />\n            <Footer />\n        </>\n    )\n}","import React, { Suspense } from 'react';\nimport './App.css';\nimport Home from './layouts/home';\nimport logo from './logo.svg'\n\nfunction App() {\n  const Loader = () => {\n    return (\n      <div className=\"App\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>loading...</div>\n      </div>\n    )\n  }\n\n  return (\n    <Suspense fallback={<Loader />}>\n      <Home/>\n    </Suspense>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './i18n';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}